define(["dojo/_base/declare","dojo/_base/lang","dojo/dnd/move","dijit/_WidgetBase","dijit/_TemplatedMixin","dojo/text!./templates/measureDialog.html","esri/tasks/GeometryService","esri/geometry/mathUtils","esri/layers/GraphicsLayer","dojo/keys","dojo/_base/connect","esri/toolbars/draw","esri/SnappingManager","esri/symbols/SimpleLineSymbol","esri/symbols/SimpleMarkerSymbol","esri/symbols/SimpleFillSymbol","esri/graphic","esri/tasks/LengthsParameters","dojo/touch","esri/tasks/AreasAndLengthsParameters","esri/tasks/BufferParameters","esri/tasks/DistanceParameters","esri/symbols/TextSymbol","esri/symbols/Font","dojo/_base/Color","esri/geometry/Point","esri/tasks/query","esri/toolbars/edit","esri/geometry/Extent","dijit/Menu","dijit/MenuItem","dijit/MenuSeparator","dojo/query","dojo/dom","dojo/dom-style","dojo/dom-construct","dojo/dom-class","dojo/on","dojo/NodeList-traverse","dojo/NodeList-manipulate"],function(declare,lang,move,_WidgetBase,_TemplatedMixin,template,GeometryService,mathUtils,GraphicsLayer,keys,Connect,Draw,SnappingManager,SimpleLineSymbol,SimpleMarkerSymbol,SimpleFillSymbol,Graphic,LengthsParameters,touch,AreasAndLengthsParameters,BufferParameters,DistanceParameters,TextSymbol,Font,Color,Point,Query,Edit,Extent,Menu,MenuItem,MenuSeparator,query,dom,domStyle,domConstruct,domClass,on){var toolType,selected,fillColor=new Color([255,255,0,.25]),outlineColor=new Color([255,255,0,1]),outlineWidth=5,lineColor=new Color([255,255,0,1]),lineStyle=SimpleLineSymbol.STYLE_SOLID,lineWidth=5,textColor=new Color([207,2,38]),textSize="1em",textStyle=Font.STYLE_ITALIC,textWeight=Font.WEIGHT_BOLDER,textVariant=Font.VARIANT_NORMAL,textFamily="Courier New",meas={};jerry=null;var outLineLength,map,parcLayer,outPolyLength,outPolyArea,ctxMenuForGraphics=new Menu({}),lengthParams=new LengthsParameters;return declare("measureWidget",[_WidgetBase,_TemplatedMixin],{templateString:template,mapRef:null,gsvc:null,device:null,parcelLayer:null,postCreate:function(){this.inherited(arguments),domConstruct.place(this.domNode,this.srcNodeRef.id,"before"),measureWidget=this,map=measureWidget.mapRef,parcLayer=measureWidget.parcelLayer,gsvc=measureWidget.gsvc,device=measureWidget.device,geometryServer=new GeometryService(gsvc),meas.point=new GraphicsLayer,meas.line=new GraphicsLayer,meas.poly=new GraphicsLayer,meas.text=new GraphicsLayer,meas.anno=new GraphicsLayer,tb=new Draw(map),map.addLayers([meas.point,meas.line,meas.poly,meas.text,meas.anno]);var snapper=map.enableSnapping({snapKey:keys.copyKey}),lyrinfo=[{layer:parcLayer}];snapper.setLayerInfos(lyrinfo),measureWidget.enableCheck(dom.byId("measureYes").checked),on(dom.byId("measureYes"),"change",function(){measureWidget.enableCheck(dom.byId("measureYes").checked)}),on(dom.byId("uomPointBox"),"change",function(){"latlon"===dom.byId("uomPointBox").value?(dom.byId("gcsPointResult").style.display="inline",dom.byId("utmPointResult").style.display="none"):"utm"===dom.byId("uomPointBox").value&&(dom.byId("gcsPointResult").style.display="none",dom.byId("utmPointResult").style.display="inline")}),on(meas.poly,"mouse-over",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.poly,"mouse-out",function(evt){ctxMenuForGraphics.unBindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.poly,"click",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.line,"click",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.point,"click",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.line,"mouse-over",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.line,"mouse-out",function(evt){ctxMenuForGraphics.unBindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.point,"mouse-over",function(evt){selected=evt.graphic,ctxMenuForGraphics.bindDomNode(evt.graphic.getDojoShape().getNode())}),on(meas.point,"mouse-out",function(evt){ctxMenuForGraphics.unBindDomNode(evt.graphic.getDojoShape().getNode())}),ctxMenuForGraphics.addChild(new MenuSeparator),ctxMenuForGraphics.addChild(new MenuItem({label:"Delete Graphic",onClick:function(){var shape=selected.geometry.type,clickedExtent=selected.geometry.getExtent();if("polygon"===shape||"polyline"===shape)for(i=0;i<2;i++)meas.text.graphics.forEach(function(graphic){clickedExtent.contains(graphic.geometry)&&(meas.text.remove(graphic),meas.anno.remove(graphic))});else{var clickedPointExtent=measureWidget._pointToExtent(map,selected.geometry,10);meas.text.graphics.forEach(function(graphic){clickedPointExtent.contains(graphic.geometry)&&(meas.text.remove(graphic),meas.anno.remove(graphic))})}meas.point.remove(selected),meas.poly.remove(selected),meas.line.remove(selected)}})),ctxMenuForGraphics.startup(),geometryServer.on("areas-and-lengths-complete",function(result){var output=measureWidget._outputArea(result,outPolyArea,outPolyLength);dom.byId("area").innerHTML=output[0],dom.byId("length").innerHTML=output[1],measureWidget._measurementLabelPoints(areaAndLengthPolyGraphic,measureWidget._createAreaText(result,outPolyArea),measureWidget._createPerimText(result,outPolyLength))})},startup:function(){this.inherited(arguments)},_createAreaText:function(result,outPolyArea){return"Area: "+result.result.areas[0].toFixed(3)+" "+outPolyArea},_createPerimText:function(result,outPolyLength){return"Perimeter: "+result.result.lengths[0].toFixed(3)+" "+outPolyLength},_outputArea:function(result,outPolyArea,outPolyLength){return[result.result.areas[0].toFixed(3)+" "+outPolyArea,result.result.lengths[0].toFixed(3)+" "+outPolyLength]},enableCheck:function(isChecked){return isChecked===!0?(query(".showBlock").forEach(function(x){x.style.display="inline"}),"inline"):(query(".showBlock").forEach(function(x){x.style.display="none"}),"none")},clearClick:function(){meas.point.clear(),meas.line.clear(),meas.poly.clear(),meas.text.clear(),meas.anno.clear(),map.infoWindow=aG.popup,query(this.gcsPointResult,this.utmPointResult).style("display","none"),query("#gcsPointResult, #utmPointResult, #polyResult, #lineResult").children("span.remove").forEach(function(x){domConstruct.empty(x)})},setPoly:function(x){measureWidget._resetButtonBlock(x.target,["polySeg",x.target.getAttribute("data-set")],"#polyResult, #uomPolyBox, #uomText"),tb.activate(Draw[x.target.id.slice(4).toUpperCase()]),"inline"===dom.byId("polyResult").style.display&&"inline"===dom.byId("uomPolyBox").style.display&&"inline"===dom.byId("uomText").style.display&&measureWidget._segments("uomPolyBox","polysegment",x.target.id),toolType=x.target.id.slice(4),meas.del=on(tb,"draw-end",measureWidget._addAreaPoly)},setLine:function(x){measureWidget._resetButtonBlock(x.target,["lineSeg",x.target.getAttribute("data-set")],"#lineResult, #uomLineBox"),tb.activate(Draw[x.target.id.slice(4).toUpperCase()]),"inline"===dom.byId("lineResult").style.display&&"inline"===dom.byId("uomLineBox").style.display&&measureWidget._segments("uomLineBox","segment",x.target.id),toolType=x.target.id.slice(4),meas.del=on(tb,"draw-end",measureWidget._addlinegraphic)},setPoint:function(x){measureWidget._resetButtonBlock(x.target,null,"#uomPointBox"),tb.activate(Draw[x.target.id.slice(4).toUpperCase()]),toolType="Point",meas.del=on(tb,"draw-end",function(geometry){meas.point.add(new Graphic(geometry.geometry,(new SimpleMarkerSymbol).setColor(fillColor))),ga("send","event","measureDrawTool","toolUsed",toolType),dom.byId("measureYes").checked&&measureWidget._getPointLocation(geometry.geometry)})},_resetButtonBlock:function(target,segmentText,inlines){null!==segmentText&&(dom.byId(segmentText[0]).style.display=segmentText[1]),query("#drawButtonBlock").children("span.drawButton").forEach(function(e){domStyle.set(e,{backgroundColor:"#FFFFFF"})}),domStyle.set(target,{backgroundColor:"#ABABAB"}),query("#lineResult, #polyResult, #gcsPointResult, #utmPointResult, #uomPolyBox, #uomLineBox, #uomPointBox").forEach(function(x){domStyle.set(x,{display:"none"})}),query(inlines).forEach(function(x){domStyle.set(x,{display:"inline"})}),query("#gcsPointResult, #utmPointResult, #polyResult, #lineResult").children("span.remove").forEach(function(x){domConstruct.empty(x)}),measureWidget._disconnect(),parcLayer.infoTemplate=map.infoWindow="",map.setMapCursor("crosshair")},_disconnect:function(){toolType="",tb.deactivate(),void 0!==meas.del&&meas.del.remove(),map.setMapCursor("default"),map.infoWindow=aG.popup,parcLayer.infoTemplate=aG.pTemp},_addAreaPoly:function(areaGeometry){var polyGraphic=new SimpleFillSymbol;polyGraphic.setColor(fillColor),polyGraphic.setOutline(new SimpleLineSymbol(lineStyle,outlineColor,outlineWidth));var areaGraphic=new Graphic(areaGeometry.geometry,polyGraphic);areaAndLengthPolyGraphic=meas.poly.add(areaGraphic),dom.byId("measureYes").checked&&measureWidget._getAreaAndLength(areaGeometry),measureWidget._disconnect()},_getAreaAndLength:function(areaGeometry){polyUTM=areaGeometry.geometry;var areasAndLengthParams=new AreasAndLengthsParameters;return"UNIT_ACRES"===dom.byId("uomPolyBox").value?(outPolyLength="feet",outPolyArea="acres",areasAndLengthParams.areaUnit=GeometryService.UNIT_ACRES,areasAndLengthParams.lengthUnit=GeometryService.UNIT_FOOT):"UNIT_SQUARE_MILES"===dom.byId("uomPolyBox").value?(outPolyLength="miles",outPolyArea="SQ Miles",areasAndLengthParams.areaUnit=GeometryService.UNIT_SQUARE_MILES,areasAndLengthParams.lengthUnit=GeometryService.UNIT_STATUTE_MILE):"UNIT_SQUARE_KILOMETERS"===dom.byId("uomPolyBox").value?(outPolyLength="kilometers",outPolyArea="SQ Kilometers",areasAndLengthParams.areaUnit=GeometryService.UNIT_SQUARE_KILOMETERS,areasAndLengthParams.lengthUnit=GeometryService.UNIT_KILOMETER):"UNIT_SQUARE_METERS"===dom.byId("uomPolyBox").value?(outPolyLength="meters",outPolyArea="SQ MT",areasAndLengthParams.areaUnit=GeometryService.UNIT_SQUARE_METERS,areasAndLengthParams.lengthUnit=GeometryService.UNIT_METERS):"UNIT_SQUARE_FEET"===dom.byId("uomPolyBox").value&&(outPolyLength="feet",outPolyArea="SQ FT",areasAndLengthParams.areaUnit=GeometryService.UNIT_SQUARE_FEET,areasAndLengthParams.lengthUnit=GeometryService.UNIT_FOOT),geometryServer.simplify([polyUTM],function(simplifiedGeometries){areasAndLengthParams.polygons=simplifiedGeometries,geometryServer.areasAndLengths(areasAndLengthParams)}),outPolyLength},_addlinegraphic:function(geometry){ga("send","event","measureDrawTool","toolUsed",toolType),meas.line.add(new Graphic(geometry.geometry,new SimpleLineSymbol(lineStyle,lineColor,lineWidth))),dom.byId("measureYes").checked===!0&&measureWidget._getLineLength(geometry),measureWidget._disconnect()},_getLineLength:function(geometry){var unit=measureWidget._getlengthunit();lengthParams.polylines=[geometry.geometry],lengthParams.geodesic=!0,geometryServer.lengths(lengthParams,function(result){measureWidget._bufferLine(geometry,result,unit),measureWidget._outputLine(result,unit)})},_bufferLine:function(geometry,result,outLineLength){var params=new BufferParameters;params.geometries=[geometry.geometry],params.distances=[1],params.unit=BufferParameters.UNIT_FOOT;geometryServer.buffer(params,function(bufferOutput){if("Yards"===dom.byId("uomLineBox").value){var ydLength=result.lengths[0]/3;lineText="Length: "+ydLength.toFixed(1)+" "+outLineLength}else lineText="Length: "+result.lengths[0].toFixed(1)+" "+outLineLength;geometryServer.labelPoints(bufferOutput,function(labelPoints3){meas.text.add(new Graphic(labelPoints3[0],new TextSymbol(lineText).setColor(textColor).setFont(new Font(textSize,textStyle,textVariant,textWeight,textFamily)).setOffset(0,10).setAlign(TextSymbol.ALIGN_MIDDLE)))})})},_outputLine:function(result,outLineLength){result="Yards"==dom.byId("uomLineBox").value?result.lengths[0]/3:result.lengths[0];var linelengthOutput=result.toFixed(3)+" "+outLineLength;query("#lineLength").text(linelengthOutput),delete window.result},_getlengthunit:function(){return"Feet"===dom.byId("uomLineBox").value?(outLineLength="feet",lengthParams.lengthUnit=GeometryService.UNIT_FOOT):"Miles"===dom.byId("uomLineBox").value?(outLineLength="miles",lengthParams.lengthUnit=GeometryService.UNIT_STATUTE_MILE):"Kilometers"===dom.byId("uomLineBox").value?(outLineLength="kilometers",lengthParams.lengthUnit=GeometryService.UNIT_KILOMETER):"Meters"===dom.byId("uomLineBox").value?(outLineLength="meters",lengthParams.lengthUnit=GeometryService.UNIT_METER):"Yards"===dom.byId("uomLineBox").value&&(outLineLength="yards",lengthParams.lengthUnit=GeometryService.UNIT_FOOT),outLineLength},_pointToExtent:function(map,point,toleranceInPixel){var pixelWidth=map.extent.getWidth()/map.width,toleraceInMapCoords=toleranceInPixel*pixelWidth;return new Extent(point.x-toleraceInMapCoords,point.y-toleraceInMapCoords,point.x+toleraceInMapCoords,point.y+toleraceInMapCoords,map.spatialReference)},_measurementLabelPoints:function(coords,areaText,perimText){geometryServer.labelPoints([coords.geometry],function(labelPoint){meas.text.add(new Graphic(labelPoint[0],new TextSymbol(perimText).setColor(textColor).setFont(new Font(textSize,textStyle,textVariant,textWeight,textFamily)).setOffset(0,-10).setAlign(TextSymbol.ALIGN_MIDDLE))),meas.text.add(new Graphic(labelPoint[0],new TextSymbol(areaText).setColor(textColor).setFont(new Font(textSize,textStyle,textVariant,textWeight,textFamily)).setOffset(0,10).setAlign(TextSymbol.ALIGN_MIDDLE)))})},_getPointLocation:function(UTMPoint){require(["esri/SpatialReference","dojo/query","dojo/dom-construct"],function(SpatialReference,query,domConstruct){var text,wgs84=new SpatialReference({wkid:4326}),uompb=dom.byId("uomPointBox").value;if("latlon"===uompb){dom.byId("gcsPointResult").style.display="inline",query("#utmPointResult span.remove").forEach(function(i){domConstruct.empty(i)});var point84=geometryServer.project([UTMPoint],wgs84,function(result){point84=result[0];var lon=point84.x,lat=point84.y,firstPoint=new Point(lon,lat);text=firstPoint.y.toFixed(3)+" "+firstPoint.x.toFixed(3),measureWidget._measurementPointText(UTMPoint,text),query("#latResult").text(firstPoint.y.toFixed(3)+" deg"),query("#lonResult").text(firstPoint.x.toFixed(3)+" deg")})}else"utm"===uompb&&(dom.byId("utmPointResult").style.display="inline",query("#gcsPointResult span.remove").forEach(function(i){domConstruct.empty(i)}),text="X: "+UTMPoint.x.toFixed(3)+" Y: "+UTMPoint.y.toFixed(3),measureWidget._measurementPointText(UTMPoint,text),query("#yResult").text(UTMPoint.y.toFixed(3)+" meters"),query("#xResult").text(UTMPoint.x.toFixed(3)+" meters"))})},_measurementPointText:function(point,text){meas.text.add(new Graphic(point,new TextSymbol(text).setFont(new Font(textSize,textStyle,textVariant,textWeight,textFamily)).setColor(textColor).setOffset(0,12).setAlign(TextSymbol.ALIGN_START))),measureWidget._disconnect()},_segments:function(uomBox,segment,selectedTool){if("drawPolygon"===selectedTool||"drawPolyline"===selectedTool)var jerry=on(map,"click",function(evt){function curCoords(evt){cur=evt.mapPoint,dom.byId(segment).innerHTML=(mathUtils.getLength(initpoint,cur)*factor).toFixed(3)+" "+uom}var factor=[],initpoint=0,cur=0,uom=dom.byId(uomBox).value;dom.byId(segment).innerHTML=0,"Feet"===uom||"UNIT_ACRES"===uom||"UNIT_SQUARE_FEET"===uom?(factor=3.28084,uom="Feet"):"Yards"===uom?(factor=1.09361,uom="Yards"):"Miles"===uom||"UNIT_SQUARE_MILES"===uom?(factor=621371e-9,uom="Miles"):"Kilometers"===uom||"UNIT_SQUARE_KILOMETERS"===uom?(factor=.001,oum="Kilometers"):(factor=1,uom="Meters"),initpoint=evt.mapPoint;var tom=on(map,"mouse-move",curCoords);on(map,"dbl-click",function(){tom.remove()});var speedy=on(query("#drawPoint,#drawPolygon,#drawRectangle,#drawFreehand_polygon,#drawCircle"),"click",function(){jerry&&(jerry.remove(),speedy.remove())})})}})});